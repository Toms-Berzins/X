{
  "rules": {
    ".read": false,
    ".write": false,
    "quotes": {
      ".read": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || (query.orderByChild === 'userId' && query.equalTo === auth.uid))",
      ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || (query.orderByChild === 'userId' && query.equalTo === auth.uid))",
      ".indexOn": ["userId", "status", "createdAt"],
      "$quoteId": {
        ".read": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || data.child('userId').val() === auth.uid)",
        ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || data.child('userId').val() === auth.uid)",
        ".validate": "newData.hasChildren(['userId', 'items', 'coating', 'additionalServices', 'contactInfo', 'total'])"
      }
    },
    "users": {
      ".indexOn": ["role", "email"],
      "$uid": {
        ".read": "auth != null && ($uid === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin')",
        ".write": "auth != null && ($uid === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin')",
        "role": {
          ".validate": "newData.isString() && (newData.val() === 'user' || newData.val() === 'admin')"
        },
        "email": {
          ".validate": "newData.isString() && newData.val().matches(/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/)"
        },
        "displayName": {
          ".validate": "newData.isString()"
        },
        "createdAt": {
          ".validate": "newData.isString()"
        },
        "updatedAt": {
          ".validate": "newData.isString()"
        }
      }
    }
  }
}